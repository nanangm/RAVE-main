Bootstrap: docker
From: nvidia/cuda:12.1.1-cudnn8-devel-ubuntu22.04

%labels
    Author "Minsak"
    Purpose "RAVE/CCEdit GPU env for HPC via Apptainer (CUDA 12.1, PyTorch 2.3.1,NumPy 1.x locked , venv)"
    Version "1.2"


%environment
    export LC_ALL=C.UTF-8
    export LANG=C.UTF-8
    export PYTHONUNBUFFERED=1
    export PIP_NO_CACHE_DIR=1
    export PYTHONNOUSERSITE=1
    export TORCH_CUDA_ARCH_LIST="8.9"
    export PYTORCH_CUDA_ALLOC_CONF="max_split_size_mb:128,expandable_segments:True"
    export HF_HOME=/opt/hf_cache
    export HUGGINGFACE_HUB_CACHE=/opt/hf_cache
    export PATH=/opt/venv/bin:$PATH

%post
    set -ex
    export DEBIAN_FRONTEND=noninteractive
    apt-get update && apt-get install -y --no-install-recommends \
        git curl wget ca-certificates ffmpeg build-essential \
        python3 python3-venv python3-pip python3-dev \
        && rm -rf /var/lib/apt/lists/*

    mkdir -p /opt/hf_cache /workspace
    chmod -R 777 /opt/hf_cache /workspace

    # --- Isolated venv ---
    python3 -m venv /opt/venv
    /opt/venv/bin/pip install --upgrade pip

    # --- Hard pins to avoid NumPy 2.x forever ---
    cat >/opt/constraints.txt <<'EOF'
numpy==1.26.4
pillow==10.4.0
typing-extensions==4.9.0
requests>=2.31,<3
pandas==2.2.2
numexpr==2.8.7
bottleneck==1.3.8
scikit-image==0.22.0
einops==0.7.0
timm==0.9.16
addict==2.4.0
yapf==0.40.2
safetensors==0.4.5
pyyaml
tqdm
EOF

    # 1) Install NumPy 1.x & friends FIRST (prevents resolver from pulling NumPy 2)
    /opt/venv/bin/pip install -r /opt/constraints.txt

    # 2) Install PyTorch 2.3.1 cu121 (works great with NumPy 1.26.4)
    /opt/venv/bin/pip install --index-url https://download.pytorch.org/whl/cu121 \
        torch==2.3.1 torchaudio==2.3.1 --constraint /opt/constraints.txt

    # 3) Pre-pin torchvision deps are already in venv; now install torchvision WITHOUT deps
    /opt/venv/bin/pip install --index-url https://download.pytorch.org/whl/cu121 \
        torchvision==0.18.1 --no-deps

    # 4) Core ML stack (no GUI): diffusers/transformers/accelerate/xformers, headless OpenCV
    #    If xformers 0.0.27.post2 ever complains, fallback to 0.0.26.post1.
    /opt/venv/bin/pip install \
        diffusers==0.30.3 transformers==4.44.2 accelerate==0.34.2 \
        xformers==0.0.27.post2 huggingface_hub==0.24.6 \
        opencv-python-headless==4.10.0.84 \
        --constraint /opt/constraints.txt

    # 5) Annotators commonly used by RAVE/CCEdit (no GUI)
    /opt/venv/bin/pip install \
        "git+https://github.com/XPixelGroup/BasicSR.git" \
        facexlib realesrgan gfpgan controlnet-aux==0.0.9 onnxruntime-gpu==1.18.1 \
        --constraint /opt/constraints.txt

    # Avoid PyPI 'triton' (torch provides torchtriton); if it slipped in, remove it.
    /opt/venv/bin/pip uninstall -y triton || true

    # Quick CUDA check at build-time (non-fatal)
    /opt/venv/bin/python - <<'PY' || true
import torch, numpy
print("torch:", torch.__version__, "cuda?", torch.cuda.is_available())
print("numpy:", numpy.__version__)
PY

%runscript
    # Entry prints versions and drops to shell; no GUI
    set -e
    echo "[rave_clean] Using venv: $(which python)"
    python - <<'PY'
import torch, numpy
print("torch:", torch.__version__, "cuda?", torch.cuda.is_available(), "devices:", torch.cuda.device_count())
print("numpy:", numpy.__version__)
PY
    exec bash

%help
    Training/inference container:
      - CUDA 12.1, PyTorch 2.3.1/cu121
      - NumPy pinned to 1.26.4 (prevented from upgrading)
      - No GUI stack; uses opencv-python-headless
    Build:
      apptainer build rave_clean.sif rave_clean.def
    Use:
      apptainer exec --nv --bind /path/to/repo:/workspace/repo rave_clean.sif bash
